#############################################################################
# Makefile for building: MotionDesigner
# Generated by qmake (2.01a) (Qt 4.7.0) on: Mon Mar 28 03:08:57 2011
# Project:  MotionDesigner.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile MotionDesigner.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_DBUS_LIB -DQT_XMLPATTERNS_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtXmlPatterns -I/usr/include/qt4/QtDBus -I/usr/include/qt4 -I/usr/X11R6/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtDBus -lQtXmlPatterns -lQtXml -lQtOpenGL -lQtGui -lQtNetwork -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		sliderdialog.cpp \
		Robot.cpp \
		sliderinput.cpp \
		jointsliders.cpp \
		aboutdialog.cpp \
		motionexecution.cpp \
		executionthread.cpp \
		client.cpp moc_mainwindow.cpp \
		moc_sliderdialog.cpp \
		moc_sliderinput.cpp \
		moc_jointsliders.cpp \
		moc_aboutdialog.cpp \
		moc_motionexecution.cpp \
		moc_executionthread.cpp \
		moc_client.cpp \
		qrc_icons.cpp
OBJECTS       = main.o \
		mainwindow.o \
		sliderdialog.o \
		Robot.o \
		sliderinput.o \
		jointsliders.o \
		aboutdialog.o \
		motionexecution.o \
		executionthread.o \
		client.o \
		moc_mainwindow.o \
		moc_sliderdialog.o \
		moc_sliderinput.o \
		moc_jointsliders.o \
		moc_aboutdialog.o \
		moc_motionexecution.o \
		moc_executionthread.o \
		moc_client.o \
		qrc_icons.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/dbusinterfaces.prf \
		/usr/share/qt4/mkspecs/features/dbusadaptors.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		MotionDesigner.pro
QMAKE_TARGET  = MotionDesigner
DESTDIR       = 
TARGET        = MotionDesigner

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_aboutdialog.h ui_motionexecution.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: MotionDesigner.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/dbusinterfaces.prf \
		/usr/share/qt4/mkspecs/features/dbusadaptors.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtDBus.prl \
		/usr/lib/libQtXmlPatterns.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtOpenGL.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile MotionDesigner.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/dbusinterfaces.prf:
/usr/share/qt4/mkspecs/features/dbusadaptors.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtDBus.prl:
/usr/lib/libQtXmlPatterns.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtOpenGL.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile MotionDesigner.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/MotionDesigner1.0.0 || $(MKDIR) .tmp/MotionDesigner1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/MotionDesigner1.0.0/ && $(COPY_FILE) --parents mainwindow.h sliderdialog.h Joint.h Robot.h sliderinput.h jointsliders.h aboutdialog.h motionexecution.h executionthread.h client.h .tmp/MotionDesigner1.0.0/ && $(COPY_FILE) --parents icons.qrc .tmp/MotionDesigner1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp sliderdialog.cpp Robot.cpp sliderinput.cpp jointsliders.cpp aboutdialog.cpp motionexecution.cpp executionthread.cpp client.cpp .tmp/MotionDesigner1.0.0/ && $(COPY_FILE) --parents mainwindow.ui aboutdialog.ui motionexecution.ui .tmp/MotionDesigner1.0.0/ && (cd `dirname .tmp/MotionDesigner1.0.0` && $(TAR) MotionDesigner1.0.0.tar MotionDesigner1.0.0 && $(COMPRESS) MotionDesigner1.0.0.tar) && $(MOVE) `dirname .tmp/MotionDesigner1.0.0`/MotionDesigner1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/MotionDesigner1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_sliderdialog.cpp moc_sliderinput.cpp moc_jointsliders.cpp moc_aboutdialog.cpp moc_motionexecution.cpp moc_executionthread.cpp moc_client.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_sliderdialog.cpp moc_sliderinput.cpp moc_jointsliders.cpp moc_aboutdialog.cpp moc_motionexecution.cpp moc_executionthread.cpp moc_client.cpp
moc_mainwindow.cpp: sliderdialog.h \
		sliderinput.h \
		jointsliders.h \
		Robot.h \
		Joint.h \
		aboutdialog.h \
		motionexecution.h \
		executionthread.h \
		client.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_sliderdialog.cpp: sliderinput.h \
		jointsliders.h \
		Robot.h \
		Joint.h \
		sliderdialog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) sliderdialog.h -o moc_sliderdialog.cpp

moc_sliderinput.cpp: sliderinput.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) sliderinput.h -o moc_sliderinput.cpp

moc_jointsliders.cpp: Robot.h \
		Joint.h \
		sliderinput.h \
		jointsliders.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) jointsliders.h -o moc_jointsliders.cpp

moc_aboutdialog.cpp: aboutdialog.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) aboutdialog.h -o moc_aboutdialog.cpp

moc_motionexecution.cpp: executionthread.h \
		motionexecution.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) motionexecution.h -o moc_motionexecution.cpp

moc_executionthread.cpp: executionthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) executionthread.h -o moc_executionthread.cpp

moc_client.cpp: client.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) client.h -o moc_client.cpp

compiler_dbus_interface_source_make_all:
compiler_dbus_interface_source_clean:
compiler_dbus_adaptor_source_make_all:
compiler_dbus_adaptor_source_clean:
compiler_rcc_make_all: qrc_icons.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_icons.cpp
qrc_icons.cpp: icons.qrc \
		splash.png \
		goto.png \
		off.png \
		play.png \
		on.png \
		connect.jpeg \
		step.png
	/usr/bin/rcc -name icons icons.qrc -o qrc_icons.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_dbus_interface_header_make_all:
compiler_dbus_interface_header_clean:
compiler_dbus_interface_moc_make_all:
compiler_dbus_interface_moc_clean:
compiler_dbus_adaptor_header_make_all:
compiler_dbus_adaptor_header_clean:
compiler_dbus_adaptor_moc_make_all:
compiler_dbus_adaptor_moc_clean:
compiler_uic_make_all: ui_mainwindow.h ui_aboutdialog.h ui_motionexecution.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_aboutdialog.h ui_motionexecution.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_aboutdialog.h: aboutdialog.ui
	/usr/bin/uic-qt4 aboutdialog.ui -o ui_aboutdialog.h

ui_motionexecution.h: motionexecution.ui
	/usr/bin/uic-qt4 motionexecution.ui -o ui_motionexecution.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		sliderdialog.h \
		sliderinput.h \
		jointsliders.h \
		Robot.h \
		Joint.h \
		aboutdialog.h \
		motionexecution.h \
		executionthread.h \
		client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		sliderdialog.h \
		sliderinput.h \
		jointsliders.h \
		Robot.h \
		Joint.h \
		aboutdialog.h \
		motionexecution.h \
		executionthread.h \
		client.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

sliderdialog.o: sliderdialog.cpp sliderdialog.h \
		sliderinput.h \
		jointsliders.h \
		Robot.h \
		Joint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sliderdialog.o sliderdialog.cpp

Robot.o: Robot.cpp Robot.h \
		Joint.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Robot.o Robot.cpp

sliderinput.o: sliderinput.cpp sliderinput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sliderinput.o sliderinput.cpp

jointsliders.o: jointsliders.cpp jointsliders.h \
		Robot.h \
		Joint.h \
		sliderinput.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jointsliders.o jointsliders.cpp

aboutdialog.o: aboutdialog.cpp aboutdialog.h \
		ui_aboutdialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aboutdialog.o aboutdialog.cpp

motionexecution.o: motionexecution.cpp motionexecution.h \
		executionthread.h \
		ui_motionexecution.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o motionexecution.o motionexecution.cpp

executionthread.o: executionthread.cpp executionthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o executionthread.o executionthread.cpp

client.o: client.cpp client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o client.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_sliderdialog.o: moc_sliderdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sliderdialog.o moc_sliderdialog.cpp

moc_sliderinput.o: moc_sliderinput.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sliderinput.o moc_sliderinput.cpp

moc_jointsliders.o: moc_jointsliders.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_jointsliders.o moc_jointsliders.cpp

moc_aboutdialog.o: moc_aboutdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_aboutdialog.o moc_aboutdialog.cpp

moc_motionexecution.o: moc_motionexecution.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_motionexecution.o moc_motionexecution.cpp

moc_executionthread.o: moc_executionthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_executionthread.o moc_executionthread.cpp

moc_client.o: moc_client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_client.o moc_client.cpp

qrc_icons.o: qrc_icons.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_icons.o qrc_icons.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

