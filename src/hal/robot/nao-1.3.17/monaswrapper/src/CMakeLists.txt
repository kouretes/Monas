##############################
#
# WELCOME
#
# This is the main cmake configuration file
# associated with your project
# You can define specific compilation options here
#
# More about cmake : www.cmake.org

# This file was generated by Aldebaran Robotics ModuleGenerator


############################ PROJECT NAME
PROJECT( WRAPPER )




############################ DEFINITION
# Add definitions needed here
ADD_DEFINITIONS( ${ALCOMMON_DEFINITIONS} ${PTHREAD_DEFINITIONS} ${TINYXML_DEFINITIONS} ${BOOST_DEFINITIONS})




############################ INCLUDE DIRECTORY
# Define include directories here
INCLUDE_DIRECTORIES( ${PROXIES_INCLUDE_DIR} ${ALCOMMON_INCLUDE_DIR} ${PTHREAD_INCLUDE_DIR}  ${TINYXML_INCLUDE_DIR}  ${BOOST_INCLUDE_DIR})




############################ PROJECT SOURCES FILES
# Add source files needed to compile this project
SET(WRAPPER_SRCS

#<FILES> don't remove this comment
talws.cpp talws.h 
#</FILES> don't remove this comment

    monaswrapper.cpp monaswrapper.h
  )



############################ CHECK LIBRARY / EXECUTABLE OPTION

IF( WRAPPER_IS_REMOTE STREQUAL "OFF" )
    MESSAGE( STATUS "monaswrapper is compiled as a dynamic object" )
    ADD_LIBRARY( monaswrapper SHARED ${WRAPPER_SRCS} )
ELSE( WRAPPER_IS_REMOTE STREQUAL "OFF" )
    MESSAGE( STATUS "monaswrapper is compiled as a remote object" )
    ADD_EXECUTABLE( monaswrapper ${WRAPPER_SRCS} )
ENDIF( WRAPPER_IS_REMOTE STREQUAL "OFF" )




############################ SET LIBRARIES TO LINK WITH
TARGET_LINK_LIBRARIES( monaswrapper GenLinux ${ModuleLibraries} ${TargetLinkLibraries} tinyxml 
        ${ALCOMMON_LIBRARIES} ${PTHREAD_LIBRARIES} ${NEWMAT_LIBRARIES}  ${TINYXML_LIBRARIES} ${BOOST_LIBRARIES}
        )
install ( TARGETS monaswrapper 
            RUNTIME DESTINATION   bin
            LIBRARY DESTINATION   lib
            ARCHIVE DESTINATION   lib/static )

############################ BINARY COPY
# copy binaries in the output folder automatically
GET_TARGET_PROPERTY( WRAPPER_LOCATION monaswrapper LOCATION)


IF ( WIN32 )
    STRING(REGEX REPLACE "monaswrapper.dll" "" WRAPPER_LOCATION_SRC ${WRAPPER_LOCATION})
    SET (OUTPUT_ROOT_DIR_LIB ${AL_DIR}/modules/lib/ )
    FILE(TO_NATIVE_PATH ${WRAPPER_LOCATION_SRC} WRAPPER_LOCATION_SRC)
    FILE(TO_NATIVE_PATH ${OUTPUT_ROOT_DIR_LIB} OUTPUT_ROOT_DIR_LIB)
ENDIF ( WIN32 )


IF( WRAPPER_IS_REMOTE STREQUAL "OFF" )

IF (WIN32)
	  ADD_CUSTOM_COMMAND(
	    TARGET monaswrapper
	    POST_BUILD
	    COMMAND echo ${WRAPPER_LOCATION_SRC}*
    	    COMMAND echo ${OUTPUT_ROOT_DIR_LIB}
	    COMMAND xcopy  ${WRAPPER_LOCATION_SRC}*.dll ${OUTPUT_ROOT_DIR_LIB} /Y /C
	  )
ELSE (WIN32)

  ADD_CUSTOM_COMMAND(
    TARGET monaswrapper
    POST_BUILD
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy
    ${WRAPPER_LOCATION}
    ${OUTPUT_ROOT_DIR_LIB}
  )
 ENDIF (WIN32)
 ELSE( WRAPPER_IS_REMOTE STREQUAL "OFF" )
  ADD_CUSTOM_COMMAND(
    TARGET monaswrapper
    POST_BUILD
    COMMAND ${CMAKE_COMMAND}
    ARGS -E copy
    ${WRAPPER_LOCATION}
    ${OUTPUT_ROOT_DIR_EXE}
  )
ENDIF( WRAPPER_IS_REMOTE STREQUAL "OFF" )



