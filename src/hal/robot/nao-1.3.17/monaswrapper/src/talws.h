/**
 * @author Kouretes
 *
 * Version : $Id$
 * This file was generated by Aldebaran Robotics ModuleGenerator
 */

#ifndef talws_H
#define talws_H
#include "monaswrapper.h"
#include "alptr.h"
#include "architecture/talws.h"

namespace AL
{
  class ALBroker;
}

/**
 * DESCRIBE YOUR CLASS HERE
 */
#define talws_VERSION_MAJOR "0"
#define talws_VERSION_MINOR "0"
class talws : public AL::ALModule
{

  public:

    /**
     * Default Constructor.
     */
    talws(AL::ALPtr<AL::ALBroker> pBroker, const std::string& pName );

    /**
     * Destructor.
     */
    virtual ~talws();

    /**
     * version
     * @return The version number of talws
     */
    std::string version();

    // **************************** BOUND METHODS ********************************** 
    /* dataChanged. Called by stm when subcription
     * has been modified.
     * @param pDataName Name of the suscribed data
     * @param pValue Value of the suscribed data
     * @param pMessage Message written by user during subscription
     */
    void dataChanged(const std::string& pDataName, const ALValue& pValue, const std::string& pMessage);


    /**
     * innerTest
     * @return True if all the tests passed
     */
    bool innerTest();


    /**
     * dummy Function. An autogenerated example method.
     * @param pMsg Message to show on screen
     * @param pFoo the function will return this parameter
     * @return an alvalue\n
     */
    ALValue dummyFunction(const std::string& pMsg, const ALValue& pFoo );

  private:
    Talws tal;

};
#endif // talws_H
