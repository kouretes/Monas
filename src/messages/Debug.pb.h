// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Debug.proto

#ifndef PROTOBUF_Debug_2eproto__INCLUDED
#define PROTOBUF_Debug_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "WorldInfo.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Debug_2eproto();
void protobuf_AssignDesc_Debug_2eproto();
void protobuf_ShutdownFile_Debug_2eproto();

class EKFMHypothesis;
class OdometryInfoMessage;
class LocalizationDataForGUI;
class PositionInfo;
class FormationDataForGUI;

enum PositionInfo_ROLE {
  PositionInfo_ROLE_GOALIE = 0,
  PositionInfo_ROLE_DEFENDER = 1,
  PositionInfo_ROLE_DEFENDER_R = 2,
  PositionInfo_ROLE_DEFENDER_L = 3,
  PositionInfo_ROLE_ONBALL = 4,
  PositionInfo_ROLE_SUPPORTER = 5,
  PositionInfo_ROLE_SUPPORTER_L = 6,
  PositionInfo_ROLE_SUPPORTER_R = 7
};
bool PositionInfo_ROLE_IsValid(int value);
const PositionInfo_ROLE PositionInfo_ROLE_ROLE_MIN = PositionInfo_ROLE_GOALIE;
const PositionInfo_ROLE PositionInfo_ROLE_ROLE_MAX = PositionInfo_ROLE_SUPPORTER_R;
const int PositionInfo_ROLE_ROLE_ARRAYSIZE = PositionInfo_ROLE_ROLE_MAX + 1;

const ::google::protobuf::EnumDescriptor* PositionInfo_ROLE_descriptor();
inline const ::std::string& PositionInfo_ROLE_Name(PositionInfo_ROLE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PositionInfo_ROLE_descriptor(), value);
}
inline bool PositionInfo_ROLE_Parse(
    const ::std::string& name, PositionInfo_ROLE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PositionInfo_ROLE>(
    PositionInfo_ROLE_descriptor(), name, value);
}
// ===================================================================

class EKFMHypothesis : public ::google::protobuf::Message {
 public:
  EKFMHypothesis();
  virtual ~EKFMHypothesis();
  
  EKFMHypothesis(const EKFMHypothesis& from);
  
  inline EKFMHypothesis& operator=(const EKFMHypothesis& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EKFMHypothesis& default_instance();
  
  void Swap(EKFMHypothesis* other);
  
  // implements Message ----------------------------------------------
  
  EKFMHypothesis* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EKFMHypothesis& from);
  void MergeFrom(const EKFMHypothesis& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 size = 1;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 1;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);
  
  // repeated .RobotPose KModel = 2;
  inline int kmodel_size() const;
  inline void clear_kmodel();
  static const int kKModelFieldNumber = 2;
  inline const ::RobotPose& kmodel(int index) const;
  inline ::RobotPose* mutable_kmodel(int index);
  inline ::RobotPose* add_kmodel();
  inline const ::google::protobuf::RepeatedPtrField< ::RobotPose >&
      kmodel() const;
  inline ::google::protobuf::RepeatedPtrField< ::RobotPose >*
      mutable_kmodel();
  
  // repeated float KModelUncertainty = 3;
  inline int kmodeluncertainty_size() const;
  inline void clear_kmodeluncertainty();
  static const int kKModelUncertaintyFieldNumber = 3;
  inline float kmodeluncertainty(int index) const;
  inline void set_kmodeluncertainty(int index, float value);
  inline void add_kmodeluncertainty(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      kmodeluncertainty() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_kmodeluncertainty();
  
  // @@protoc_insertion_point(class_scope:EKFMHypothesis)
 private:
  inline void set_has_size();
  inline void clear_has_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::RobotPose > kmodel_;
  ::google::protobuf::RepeatedField< float > kmodeluncertainty_;
  ::google::protobuf::int32 size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Debug_2eproto();
  friend void protobuf_AssignDesc_Debug_2eproto();
  friend void protobuf_ShutdownFile_Debug_2eproto();
  
  void InitAsDefaultInstance();
  static EKFMHypothesis* default_instance_;
};
// -------------------------------------------------------------------

class OdometryInfoMessage : public ::google::protobuf::Message {
 public:
  OdometryInfoMessage();
  virtual ~OdometryInfoMessage();
  
  OdometryInfoMessage(const OdometryInfoMessage& from);
  
  inline OdometryInfoMessage& operator=(const OdometryInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OdometryInfoMessage& default_instance();
  
  void Swap(OdometryInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  OdometryInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OdometryInfoMessage& from);
  void MergeFrom(const OdometryInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float trackPointX = 1;
  inline bool has_trackpointx() const;
  inline void clear_trackpointx();
  static const int kTrackPointXFieldNumber = 1;
  inline float trackpointx() const;
  inline void set_trackpointx(float value);
  
  // required float trackPointY = 2;
  inline bool has_trackpointy() const;
  inline void clear_trackpointy();
  static const int kTrackPointYFieldNumber = 2;
  inline float trackpointy() const;
  inline void set_trackpointy(float value);
  
  // required float trackPointPhi = 3;
  inline bool has_trackpointphi() const;
  inline void clear_trackpointphi();
  static const int kTrackPointPhiFieldNumber = 3;
  inline float trackpointphi() const;
  inline void set_trackpointphi(float value);
  
  // @@protoc_insertion_point(class_scope:OdometryInfoMessage)
 private:
  inline void set_has_trackpointx();
  inline void clear_has_trackpointx();
  inline void set_has_trackpointy();
  inline void clear_has_trackpointy();
  inline void set_has_trackpointphi();
  inline void clear_has_trackpointphi();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float trackpointx_;
  float trackpointy_;
  float trackpointphi_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Debug_2eproto();
  friend void protobuf_AssignDesc_Debug_2eproto();
  friend void protobuf_ShutdownFile_Debug_2eproto();
  
  void InitAsDefaultInstance();
  static OdometryInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class LocalizationDataForGUI : public ::google::protobuf::Message {
 public:
  LocalizationDataForGUI();
  virtual ~LocalizationDataForGUI();
  
  LocalizationDataForGUI(const LocalizationDataForGUI& from);
  
  inline LocalizationDataForGUI& operator=(const LocalizationDataForGUI& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalizationDataForGUI& default_instance();
  
  void Swap(LocalizationDataForGUI* other);
  
  // implements Message ----------------------------------------------
  
  LocalizationDataForGUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LocalizationDataForGUI& from);
  void MergeFrom(const LocalizationDataForGUI& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .RobotPose Particles = 1;
  inline int particles_size() const;
  inline void clear_particles();
  static const int kParticlesFieldNumber = 1;
  inline const ::RobotPose& particles(int index) const;
  inline ::RobotPose* mutable_particles(int index);
  inline ::RobotPose* add_particles();
  inline const ::google::protobuf::RepeatedPtrField< ::RobotPose >&
      particles() const;
  inline ::google::protobuf::RepeatedPtrField< ::RobotPose >*
      mutable_particles();
  
  // @@protoc_insertion_point(class_scope:LocalizationDataForGUI)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::RobotPose > particles_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Debug_2eproto();
  friend void protobuf_AssignDesc_Debug_2eproto();
  friend void protobuf_ShutdownFile_Debug_2eproto();
  
  void InitAsDefaultInstance();
  static LocalizationDataForGUI* default_instance_;
};
// -------------------------------------------------------------------

class PositionInfo : public ::google::protobuf::Message {
 public:
  PositionInfo();
  virtual ~PositionInfo();
  
  PositionInfo(const PositionInfo& from);
  
  inline PositionInfo& operator=(const PositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PositionInfo& default_instance();
  
  void Swap(PositionInfo* other);
  
  // implements Message ----------------------------------------------
  
  PositionInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PositionInfo& from);
  void MergeFrom(const PositionInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PositionInfo_ROLE ROLE;
  static const ROLE GOALIE = PositionInfo_ROLE_GOALIE;
  static const ROLE DEFENDER = PositionInfo_ROLE_DEFENDER;
  static const ROLE DEFENDER_R = PositionInfo_ROLE_DEFENDER_R;
  static const ROLE DEFENDER_L = PositionInfo_ROLE_DEFENDER_L;
  static const ROLE ONBALL = PositionInfo_ROLE_ONBALL;
  static const ROLE SUPPORTER = PositionInfo_ROLE_SUPPORTER;
  static const ROLE SUPPORTER_L = PositionInfo_ROLE_SUPPORTER_L;
  static const ROLE SUPPORTER_R = PositionInfo_ROLE_SUPPORTER_R;
  static inline bool ROLE_IsValid(int value) {
    return PositionInfo_ROLE_IsValid(value);
  }
  static const ROLE ROLE_MIN =
    PositionInfo_ROLE_ROLE_MIN;
  static const ROLE ROLE_MAX =
    PositionInfo_ROLE_ROLE_MAX;
  static const int ROLE_ARRAYSIZE =
    PositionInfo_ROLE_ROLE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ROLE_descriptor() {
    return PositionInfo_ROLE_descriptor();
  }
  static inline const ::std::string& ROLE_Name(ROLE value) {
    return PositionInfo_ROLE_Name(value);
  }
  static inline bool ROLE_Parse(const ::std::string& name,
      ROLE* value) {
    return PositionInfo_ROLE_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required float X = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);
  
  // required float Y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);
  
  // required int32 role = 3;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 3;
  inline ::google::protobuf::int32 role() const;
  inline void set_role(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PositionInfo)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_role();
  inline void clear_has_role();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  float x_;
  float y_;
  ::google::protobuf::int32 role_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_Debug_2eproto();
  friend void protobuf_AssignDesc_Debug_2eproto();
  friend void protobuf_ShutdownFile_Debug_2eproto();
  
  void InitAsDefaultInstance();
  static PositionInfo* default_instance_;
};
// -------------------------------------------------------------------

class FormationDataForGUI : public ::google::protobuf::Message {
 public:
  FormationDataForGUI();
  virtual ~FormationDataForGUI();
  
  FormationDataForGUI(const FormationDataForGUI& from);
  
  inline FormationDataForGUI& operator=(const FormationDataForGUI& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FormationDataForGUI& default_instance();
  
  void Swap(FormationDataForGUI* other);
  
  // implements Message ----------------------------------------------
  
  FormationDataForGUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormationDataForGUI& from);
  void MergeFrom(const FormationDataForGUI& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PositionInfo Positions = 1;
  inline int positions_size() const;
  inline void clear_positions();
  static const int kPositionsFieldNumber = 1;
  inline const ::PositionInfo& positions(int index) const;
  inline ::PositionInfo* mutable_positions(int index);
  inline ::PositionInfo* add_positions();
  inline const ::google::protobuf::RepeatedPtrField< ::PositionInfo >&
      positions() const;
  inline ::google::protobuf::RepeatedPtrField< ::PositionInfo >*
      mutable_positions();
  
  // @@protoc_insertion_point(class_scope:FormationDataForGUI)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PositionInfo > positions_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Debug_2eproto();
  friend void protobuf_AssignDesc_Debug_2eproto();
  friend void protobuf_ShutdownFile_Debug_2eproto();
  
  void InitAsDefaultInstance();
  static FormationDataForGUI* default_instance_;
};
// ===================================================================


// ===================================================================

// EKFMHypothesis

// required int32 size = 1;
inline bool EKFMHypothesis::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EKFMHypothesis::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EKFMHypothesis::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EKFMHypothesis::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 EKFMHypothesis::size() const {
  return size_;
}
inline void EKFMHypothesis::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
}

// repeated .RobotPose KModel = 2;
inline int EKFMHypothesis::kmodel_size() const {
  return kmodel_.size();
}
inline void EKFMHypothesis::clear_kmodel() {
  kmodel_.Clear();
}
inline const ::RobotPose& EKFMHypothesis::kmodel(int index) const {
  return kmodel_.Get(index);
}
inline ::RobotPose* EKFMHypothesis::mutable_kmodel(int index) {
  return kmodel_.Mutable(index);
}
inline ::RobotPose* EKFMHypothesis::add_kmodel() {
  return kmodel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RobotPose >&
EKFMHypothesis::kmodel() const {
  return kmodel_;
}
inline ::google::protobuf::RepeatedPtrField< ::RobotPose >*
EKFMHypothesis::mutable_kmodel() {
  return &kmodel_;
}

// repeated float KModelUncertainty = 3;
inline int EKFMHypothesis::kmodeluncertainty_size() const {
  return kmodeluncertainty_.size();
}
inline void EKFMHypothesis::clear_kmodeluncertainty() {
  kmodeluncertainty_.Clear();
}
inline float EKFMHypothesis::kmodeluncertainty(int index) const {
  return kmodeluncertainty_.Get(index);
}
inline void EKFMHypothesis::set_kmodeluncertainty(int index, float value) {
  kmodeluncertainty_.Set(index, value);
}
inline void EKFMHypothesis::add_kmodeluncertainty(float value) {
  kmodeluncertainty_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
EKFMHypothesis::kmodeluncertainty() const {
  return kmodeluncertainty_;
}
inline ::google::protobuf::RepeatedField< float >*
EKFMHypothesis::mutable_kmodeluncertainty() {
  return &kmodeluncertainty_;
}

// -------------------------------------------------------------------

// OdometryInfoMessage

// required float trackPointX = 1;
inline bool OdometryInfoMessage::has_trackpointx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OdometryInfoMessage::set_has_trackpointx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OdometryInfoMessage::clear_has_trackpointx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OdometryInfoMessage::clear_trackpointx() {
  trackpointx_ = 0;
  clear_has_trackpointx();
}
inline float OdometryInfoMessage::trackpointx() const {
  return trackpointx_;
}
inline void OdometryInfoMessage::set_trackpointx(float value) {
  set_has_trackpointx();
  trackpointx_ = value;
}

// required float trackPointY = 2;
inline bool OdometryInfoMessage::has_trackpointy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OdometryInfoMessage::set_has_trackpointy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OdometryInfoMessage::clear_has_trackpointy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OdometryInfoMessage::clear_trackpointy() {
  trackpointy_ = 0;
  clear_has_trackpointy();
}
inline float OdometryInfoMessage::trackpointy() const {
  return trackpointy_;
}
inline void OdometryInfoMessage::set_trackpointy(float value) {
  set_has_trackpointy();
  trackpointy_ = value;
}

// required float trackPointPhi = 3;
inline bool OdometryInfoMessage::has_trackpointphi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OdometryInfoMessage::set_has_trackpointphi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OdometryInfoMessage::clear_has_trackpointphi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OdometryInfoMessage::clear_trackpointphi() {
  trackpointphi_ = 0;
  clear_has_trackpointphi();
}
inline float OdometryInfoMessage::trackpointphi() const {
  return trackpointphi_;
}
inline void OdometryInfoMessage::set_trackpointphi(float value) {
  set_has_trackpointphi();
  trackpointphi_ = value;
}

// -------------------------------------------------------------------

// LocalizationDataForGUI

// repeated .RobotPose Particles = 1;
inline int LocalizationDataForGUI::particles_size() const {
  return particles_.size();
}
inline void LocalizationDataForGUI::clear_particles() {
  particles_.Clear();
}
inline const ::RobotPose& LocalizationDataForGUI::particles(int index) const {
  return particles_.Get(index);
}
inline ::RobotPose* LocalizationDataForGUI::mutable_particles(int index) {
  return particles_.Mutable(index);
}
inline ::RobotPose* LocalizationDataForGUI::add_particles() {
  return particles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RobotPose >&
LocalizationDataForGUI::particles() const {
  return particles_;
}
inline ::google::protobuf::RepeatedPtrField< ::RobotPose >*
LocalizationDataForGUI::mutable_particles() {
  return &particles_;
}

// -------------------------------------------------------------------

// PositionInfo

// required float X = 1;
inline bool PositionInfo::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionInfo::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PositionInfo::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PositionInfo::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PositionInfo::x() const {
  return x_;
}
inline void PositionInfo::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float Y = 2;
inline bool PositionInfo::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionInfo::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PositionInfo::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PositionInfo::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PositionInfo::y() const {
  return y_;
}
inline void PositionInfo::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required int32 role = 3;
inline bool PositionInfo::has_role() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PositionInfo::set_has_role() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PositionInfo::clear_has_role() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PositionInfo::clear_role() {
  role_ = 0;
  clear_has_role();
}
inline ::google::protobuf::int32 PositionInfo::role() const {
  return role_;
}
inline void PositionInfo::set_role(::google::protobuf::int32 value) {
  set_has_role();
  role_ = value;
}

// -------------------------------------------------------------------

// FormationDataForGUI

// repeated .PositionInfo Positions = 1;
inline int FormationDataForGUI::positions_size() const {
  return positions_.size();
}
inline void FormationDataForGUI::clear_positions() {
  positions_.Clear();
}
inline const ::PositionInfo& FormationDataForGUI::positions(int index) const {
  return positions_.Get(index);
}
inline ::PositionInfo* FormationDataForGUI::mutable_positions(int index) {
  return positions_.Mutable(index);
}
inline ::PositionInfo* FormationDataForGUI::add_positions() {
  return positions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PositionInfo >&
FormationDataForGUI::positions() const {
  return positions_;
}
inline ::google::protobuf::RepeatedPtrField< ::PositionInfo >*
FormationDataForGUI::mutable_positions() {
  return &positions_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PositionInfo_ROLE>() {
  return ::PositionInfo_ROLE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Debug_2eproto__INCLUDED
